1. Modificar el ejemplo `Cliente de Eco` del directorio de código fuente de manera que:
   Se especifique en la línea de comandos el nombre de la máquina servidora y 
   el número de puerto. 
   Si no se especifica nada, el servidor por defecto será `localhost`
   y el puerto el número 8187.
   Para indicar el final de una sesión cliente el usuario ha de introducir por teclado
   un punto `.`. 
   Cuando se introduzca un punto se ha de salir del bucle de entrada
   y se ha de cerrar el socket de datos.
   -----------------------------------
   El codigo modificado esta con nombre EchoClient.java y EchoServer.java 
   y funciona perfecta mente.
  
   *************************************************************************************************
    2. Implementar un `Servidor de Eco` como el que proporcionan los servidores Unix en
       el puerto 7. Partiendo del código fuente proporcionado, diseñe un servidor iterativo, 
       que verifique lo siguiente:

         * Se ha de especificar en la línea de comandos el número de puerto en el que
           el servidor acepta conexiones (por ejemplo, 8180). 
           Si no se especifica nada, el número de puerto por defecto será el 8187.
  -------------------------------------
    La respuesta esta en el fichero EchoServer2
  -------------------------------------
         * Abrir un flujo de entrada desde el socket servidor. 
  -------------------------------------
  
  
  -------------------------------------
  
         * Abrir un flujo de salida al socket. 
  -------------------------------------
  
  
  -------------------------------------
  
         * El programa ha de actuar como repetidor, recogiendo las líneas que llegan por el
           canal de entrada y escribiéndolas en el canal de salida, hasta que el usuario le
           indique que ha terminado, escribiendo un punto “.”. 
   ------------------------------------
   
   ------------------------------------

         * Cuando ya no haya más líneas que leer, se recibirá un punto, lo cual hará que 
           el servidor salga del bucle de entrada y cierre el socket servidor.
   ------------------------------------



   ------------------------------------

         * Para probar que funciona, ejecute el programa servidor en un consola, 
           y en otra terminal el `Cliente de Eco`.
   ------------------------------------
 Ya todo hecho.

   ------------------------------------
---------------------------------------------------




   *************************************************************************************************
      3. Con los dos programas anteriores realice las siguientes operaciones:

         * Ejecute los programas empezando por el servidor y a continuación el cliente.

         * En una terminal diferente arranque a otro cliente.

         * Dibuje el **diagrama de secuencia**. ¿Se pueden realizar las dos sesiones en paralelo?

         * Explique su respuesta.
--------------------------------------------------
no, no se puede realizar las dos sesiones en paralelo, y solo se puede iterativamente repetir pasos 
para otros clientes despues que se termio el cliente anterior pulsando '.'.
simulacion de diagrama de secuencia :
0- El servidor esta escuchando a puerta
1- El cliente manda demanda para coneccion.
2- El servidor acepta y le asingna coneccion.
3- El cliente iterativamente manda mensajes al servidor
4- El servidor esta en comunicacion con el primer cliente
5- El cliente 2 manda un demanda para coneccion
6- El cliente 2 se queda colocado y no responde el servidor 
7- Cuando el primer cliente pulsa '.' se termine la coneccion
8- el servidor empieza a comunicar con el cliente 2 
--------------------------------------------------

   *************************************************************************************************
   4. Modificar el `Servidor de eco` del ejercicio 2, para que sea un servidor concurrente.
   
--------------------------------------------------
 Esta realizada en el fichero EchoServidor4.java

   *************************************************************************************************
 5. Con el programa anterior y el `Cliente de Eco` del ejercicio 1 realice las siguientes
       operaciones:

         * Ejecute los programas empezando por el servidor y a continuación el cliente.

         * En una terminal diferente arranque a otro cliente.

         * Dibuje el diagrama de secuencia. ¿Se pueden realizar las dos sesiones del cliente en
           paralelo? Explique su respuesta.
-------------------------------------------------
Simulacion se la diagrama de secuencia :
0-El primer cliente manda una demanda al servidor y demanda se acepta 
1-Se asigna una hilo de proseco al primer cliente y comunicacion se realiza entre ellos
2-el segundo cliente manda una demanda al servidor y el servidor acepta y se asigna otro hilo de 
proseco al servidor para realizar comunicacion.
3-Asi susecivamente se realiza tarea en paralelo.

si, se puede realizar las dos sesiones del cliente en paralelo asi que utlizando thread nos da
posiblidades de hacer procesos en paralelo.
   *************************************************************************************************
    6. Describa las diferencias, desde el punto de vista del cliente, entre un servidor iterativo
       y un servidor concurrente para un servicio que involucre múltiples rondas de intercambios 
       de mensajes.
---------------------------------------------- 
Desde el punto de vista del cliente en el caso de servidor iterativo el cliente tiene que esperar hasta que 
llegue su turno entoces se pierde mucho tiempo, pero en el caso de servidor concurrente se parece al cliente 
que el servidor siempre esta preparado para responder y nose pierde tiempo asi que por que se asigna un hilo de
proceso a cada cliente entoces el cliente no siente que hay otra cliente.
   **************************************************************************************************